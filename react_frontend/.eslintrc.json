{
  "env": {
      "browser": true,
      "es2021": true,
      "node": true
  },
  "extends": [
      "@atomix",
      "standard",
      "eslint:recommended",
      "plugin:sonarjs/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:perfectionist/recommended-natural"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module"
  },
  "plugins": [
      "@typescript-eslint"
  ],
  "rules": {
      // * Disconnect Prettier
      "prettier/prettier": "off",

      // * Disconnect not used options
      "no-shadow": "off",
      "no-unused-vars": "off",
      "import/no-cycle": "off",
      "no-magic-numbers": "off",
      "no-empty-pattern": "off",
      "no-nested-ternary": "off",
      "import/extensions": "off",
      "no-param-reassign": "off",
      "prefer-rest-params": "off",
      "prefer-destructuring": "off",
      "no-underscore-dangle": "off",
      "no-use-before-define": "off",
      "class-methods-use-this": "off",
      "function-paren-newline": "off",
      "import/no-default-export": "off",
      "unicorn/filename-case": "off",
      "no-bitwise": "off",
      "no-empty-function": "off",
      "no-useless-constructor": "off",
      "sonarjs/no-duplicate-string": "off",

      // * The format of the name of the variable
      "unicorn/prefer-spread": "error",

      // * Bracket style format
      "brace-style": [
          "error",
          "1tbs"
      ],

      // * The format of the style of functions
      "curly": [
          "error",
          "all"
      ],

      // * Line length format (120 characters))
      "max-len": [
          "error",
          {
              "code": 120,
              "ignoreUrls": true,
              "ignoreRegExpLiterals": true
          }
      ],

      // * Indent format (gap = 2)
      "indent": [
          "error",
          2
      ],

      // * Formatting the end of the line by UNIX format (LF)
      "linebreak-style": [
        "error",
        "unix"
      ],

      // * The term format ('string')
      "quotes": [
          "error",
          "single"
      ],

      // * Format of the end of the line, installation of a point with a comma (;)
      "semi": [
          "error",
          "always"
      ],

      // * The format of installation of a gap in front of the function of the function
      "space-before-function-paren": [
          "error",
          {
              "anonymous": "always",
              "named": "always",
              "asyncArrow": "always"
          }
      ],

      // * Indent format between operators
      "padding-line-between-statements": [
          "error",
          {
              "blankLine": "always",
              "prev": [
                  "const",
                  "let",
                  "var"
              ],
              "next": "*"
          },
          {
              "blankLine": "any",
              "prev": [
                  "const",
                  "let",
                  "var"
              ],
              "next": [
                  "const",
                  "let",
                  "var"
              ]
          }
      ],

      // * The format of the length of the name of the variable
      "id-length": [
          "error",
          {
              "min": 3,
              "exceptions": [
                  "i",
                  "x",
                  "y",
                  "e",
                  "t",
                  "_",
                  "id",
                  "or",
                  "OR",
                  "z"
              ]
          }
      ],

      // * The format of the name of the variable
      "id-match": [
          "warn",
          "^(([A-Za-z0-9]+){1,})|([A-Z][A-Z_0-9]+)$",
          {
              "properties": false,
              "onlyDeclarations": true
          }
      ],

      // * Import format in the file
      "perfectionist/sort-classes": "off",
      "perfectionist/sort-enums": "off",
      "perfectionist/sort-interfaces": "off",
      "perfectionist/sort-object-types": "off",
      "perfectionist/sort-objects": "off",
      "perfectionist/sort-imports": [
          "error",
          {
              "type": "natural",
              "order": "asc",
              "groups": [
                "import",
                "export",
                "type",
                "react",
                "nanostores",
                [
                    "builtin", "external"
                ],
                "internal-type",
                "internal",
                [
                    "parent-type", "sibling-type", "index-type"
                ],
                [
                    "parent", "sibling", "index"
                ],
                "side-effect",
                "style",
                "object",
                "unknown"
              ],
              "custom-groups": {
                  "value": {
                      "react": ["react", "react-*"],
                      "nanostores": "@nanostores/**"
                  },
                  "type": {
                      "react": "react"
                  }
              },
              "newlines-between": "always",
              "internal-pattern": [
                  "@/components/**",
                  "@/stores/**",
                  "@/pages/**",
                  "@/lib/**"
              ]
          }
      ]
  }
}
